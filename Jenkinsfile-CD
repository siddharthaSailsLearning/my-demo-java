pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "siddhussoft136/java-app"
    }

    stages {
        stage('Pull Latest Image') {
            steps {
                echo "📦 Pulling latest Docker image..."
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'USER', passwordVariable: 'PASS')]) {
                    sh '''
                    set -x
                    echo "$PASS" | docker login -u "$USER" --password-stdin
                    docker pull ${DOCKER_IMAGE}:latest
                    '''
                }
            }
        }

        stage('Test Container') {
            steps {
                echo "🧪 Running temporary test container..."
                sh '''
                set -x
                docker rm -f test-app || true
                docker run -d --name test-app -p 8082:8080 ${DOCKER_IMAGE}:latest
                sleep 15
                curl -f http://localhost:8082 || (echo "Container not responding!" && exit 1)
                docker stop test-app && docker rm test-app
                '''
            }
        }

        stage('Deploy Locally') {
            steps {
                echo "🚀 Deploying container..."
                sh '''
                set -x
                docker rm -f java-app || true
                docker run -d --name java-app -p 8083:8080 ${DOCKER_IMAGE}:latest
                '''
            }
        }
    }

    post {
        always {
            echo "🔍 Cleaning up..."
            sh 'docker ps -a'
        }
        success {
            echo '✅ CD pipeline executed successfully.'
        }
        failure {
            echo '❌ CD pipeline failed. Check error logs above.'
        }
    }
}
